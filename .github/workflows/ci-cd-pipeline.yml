name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Usar la rama master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Actualizado a v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3  # Actualizado a v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./BlazorApp.csproj  # Ruta correcta

      - name: Build the app
        run: dotnet build --configuration Release ./BlazorApp.csproj  # Ruta correcta

      - name: Run tests
        run: dotnet test --verbosity normal ./BlazorApp.Test/BlazorApp.Test.csproj  # Ruta correcta

      - name: Publish the app
        run: dotnet publish --configuration Release --output ./publish ./BlazorApp.csproj  # Ruta correcta

      - name: Build Docker image
        run: docker build -t myblazorapp:latest ./  # Construir la imagen desde el directorio correcto

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Tag Docker image
        run: docker tag myblazorapp:latest "${{ secrets.DOCKER_USERNAME }}"/myblazorapp:latest

      - name: Push Docker image to Docker Hub
        run: docker push "${{ secrets.DOCKER_USERNAME }}"/myblazorapp:latest

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Deploy to Local Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/myblazorapp:latest
            docker stop myblazorapp || true
            docker rm myblazorapp || true
            docker run -d -p 8080:80 --name myblazorapp ${{ secrets.DOCKER_USERNAME }}/myblazorapp:latest

      - name: Send success mail
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Pipeline Succeeded: ${{ github.workflow }}"
          body: "Exito!, la ultima version del app esta publicada correctamente en DockerHub."
          to: ${{ secrets.TO_EMAIL }}
          from: ${{ secrets.FROM_EMAIL }}

      - name: Send failure mail
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Pipeline Failed: ${{ github.workflow }}"
          body: "Error :( Ocurrio un error y no se pudo publicar el app, revisa la ejecucion para mas detalles"
          to: ${{ secrets.TO_EMAIL }}
          from: ${{ secrets.FROM_EMAIL }}
